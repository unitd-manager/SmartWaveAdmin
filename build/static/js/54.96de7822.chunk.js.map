{"version":3,"sources":["layouts/breadcrumbs/BreadCrumbs.js","components/Message.js","components/CreationModification.js","components/ComponentCard.js","components/ProjectTabs/Tab.js","components/ClientTable/QuoteTrackItem.js","components/ClientTable/EditTrckitemModal.js","components/EmployeeTable/AttachmentPortalsTab.js","views/EditData/CustomerEdit.js","constants/creationdatetime.js","components/ComponentCardV2.js","../node_modules/react-feather/dist/icons/edit-2.js","components/Tender/AttachmentModalV2.js","components/ProjectModal/ViewFileComponentV2.js","../node_modules/react-feather/dist/icons/file.js","../node_modules/react-feather/dist/icons/image.js","components/SupplierModal/EnquiriesLinked.js"],"names":["BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","CreationModification","details","title","modification_date","creation_date","ComponentCard","children","subtitle","creationModificationDate","Tab","toggle","tabs","useSearchParams","searchParams","setSearchParams","useEffect","get","map","e","id","onClick","tab","name","QuoteLineItem","addTrackItemModal","setAddTrackItemModal","quoteTrack","loggedInuser","useContext","AppContext","useState","address_flat","address_street","address_town","address_state","address_country","address_po_code","shipper_name","formData","setFormData","handleInputChange","target","value","prev","size","isOpen","color","body","md","onChange","obj","creationdatetime","created_by","first_name","contact_id","api","post","then","setTimeout","window","reload","catch","EditLineItemModal","editTrackModal","setEditTrackModal","FetchTrackItemDat","gettrack","useParams","lineItemData","setLineItemData","res","data","length","handleData","updatedData","modified_by","console","log","UpdateData","AttachmentPortalsTab","dataForPicture","dataForAttachment","setAttachmentModal","attachmentModal","pictureData","attachmentData","roomName","setRoomName","fileTypes","setFileTypes","update","setUpdate","pictureAttachmentModal","setPictureAttachmentModal","altTagData","desc","recordType","pictureAttachmentModalProperties","setPictureAttachmentModalProperties","xs","width","AttachmentModalV2","moduleId","mediaType","modelType","ViewFileComponentV2","ContentUpdate","contentDetails","setContentDetails","activeTab","setActiveTab","navigate","useNavigate","setDataForAttachment","setDataForPicture","handleInputs","getContentById","editContentData","content_title","sub_category_id","published","editTrackModelItem","setEditTrackModelItem","TrackItem","setTrackItem","viewTrackModal","setViewTrackModal","track","settrack","getTrackItem","ComponentCardV2","mobile","email","pass_word","address1","tabId","bind","cell","index","trackID","customer_address_id","Swal","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","FetchTrackItemData","QuoteTrackItem","EnquiriesLinked","moment","format","pStyle","textAlign","marginRight","oStyle","outline","border","style","_extends","Object","assign","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Edit2","forwardRef","_ref","ref","_ref$color","_ref$size","rest","React","createElement","xmlns","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","propTypes","PropTypes","string","oneOfType","number","displayName","file","setFile","handleValue","setHandleValue","uploaded","setUploaded","multiple","handleChange","fiels","arrayOfObj","entries","types","role","FormData","forEach","ele","append","onUploadProgress","filedata","Math","round","loaded","total","uploadFile","tableStyle","getFile","setGetFile","record_id","room_name","href","rel","fileId","media_id","File","points","Image","x","y","rx","ry","cx","cy","r","EnquiriesLinkedTable","purchaseOrder","element","enquiry_type","enquiry_code","enquiry_date","parseFloat","enquiry_amount","product_enquiry_id"],"mappings":"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","file":"static/js/54.96de7822.chunk.js","sourcesContent":["import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n                <small>Modification Date: {details && details.modification_date}</small>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n                <small>Creation Date: {details && details.creation_date}</small>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n  );\r\n}\r\n","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n","import React,{useEffect} from 'react';\r\nimport { Nav, NavItem, NavLink } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nexport default function Tab({ toggle,tabs }) {\r\n  Tab.propTypes = {\r\n    toggle: PropTypes.func,\r\n    tabs: PropTypes.array\r\n  };\r\n\r\n  // for tab refresh navigation #Renuka 31-05-23\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  useEffect(() => {\r\n   toggle(searchParams.get('tab'))\r\n  }, [searchParams.get('tab')]);\r\n  // End for tab refresh navigation #Renuka 31-05-23\r\n  return (\r\n    <Nav tabs>\r\n\r\n      {tabs?.map((e)=>{\r\n        return (\r\n          <NavItem key={e.id}>\r\n            <NavLink\r\n            key={e.id}\r\n              className={e.id === searchParams.get('tab') ? 'active' : ''}\r\n              onClick={() => {\r\n                setSearchParams({tab:e.id});\r\n                toggle(e.id);\r\n              }}\r\n            >\r\n              {e.name}\r\n            </NavLink>\r\n          </NavItem>\r\n        )\r\n      })}\r\n    </Nav>\r\n  );\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport {\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport api from '../../constants/api';\r\nimport message from '../Message';\r\nimport creationdatetime from '../../constants/creationdatetime';\r\nimport AppContext from '../../context/AppContext';\r\n\r\nconst QuoteLineItem = ({ addTrackItemModal, setAddTrackItemModal, quoteTrack }) => {\r\n  QuoteLineItem.propTypes = {\r\n    addTrackItemModal: PropTypes.bool,\r\n    setAddTrackItemModal: PropTypes.func,\r\n    quoteTrack: PropTypes.any,\r\n  };\r\n\r\n  const { loggedInuser } = useContext(AppContext);\r\n\r\n  const [formData, setFormData] = useState({\r\n   address_flat: '',\r\n   address_street: '',\r\n    address_town: '',\r\n    address_state: '',\r\n    address_country: '',\r\n    address_po_code: '',\r\n    shipper_name: '',\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const obj = {\r\n      ...formData,\r\n      creation_date: creationdatetime,\r\n      created_by: loggedInuser.first_name,\r\n      contact_id: quoteTrack,\r\n    };\r\n\r\n    if (obj.address_flat) {\r\n      api\r\n        .post('/address/insertQuoteItems', obj)\r\n        .then(() => {\r\n          message('Line Item Added Successfully', 'success');\r\n          setTimeout(() => {\r\n            window.location.reload();\r\n          }, 300);\r\n        })\r\n        .catch(() => {\r\n          message('Cannot Add Line Items', 'error');\r\n        });\r\n    } else {\r\n      message('All fields are required.', 'info');\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Modal size=\"lg\" isOpen={addTrackItemModal}>\r\n      <ModalHeader>\r\n        Add Address\r\n        <Button className=\"shadow-none\" color=\"secondary\" onClick={() => setAddTrackItemModal(false)}>\r\n          X\r\n        </Button>\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <Form>\r\n          <Card body>\r\n            <Row>\r\n            <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label>Name</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"shipper_name\"\r\n                    value={formData.shipper_name}\r\n                    onChange={handleInputChange}\r\n                  \r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label>Address 1</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"address_flat\"\r\n                    value={formData.address_flat}\r\n                    onChange={handleInputChange}\r\n                  \r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label>Address 2</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"address_street\"\r\n                    value={formData.address_street}\r\n                    onChange={handleInputChange}\r\n                  \r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label>Town</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"address_town\"\r\n                    value={formData.address_town}\r\n                    onChange={handleInputChange}\r\n                  \r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n              <FormGroup>\r\n                  <Label>State</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"address_state\"\r\n                    value={formData.address_state}\r\n                    onChange={handleInputChange}\r\n                  \r\n                  />\r\n                </FormGroup>\r\n              \r\n              </Col>\r\n              <Col md=\"4\">\r\n              <FormGroup>\r\n                  <Label>Country</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"address_country\"\r\n                    value={formData.address_country}\r\n                    onChange={handleInputChange}\r\n                  \r\n                  />\r\n                </FormGroup>\r\n              \r\n              </Col>\r\n              <Col md=\"4\">\r\n              <FormGroup>\r\n                  <Label>Po Code</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"address_po_code\"\r\n                    value={formData.address_po_code}\r\n                    onChange={handleInputChange}\r\n                  \r\n                  />\r\n                </FormGroup>\r\n              \r\n              </Col>\r\n\r\n\r\n            </Row>\r\n          </Card>\r\n        </Form>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button className=\"shadow-none\" color=\"primary\" onClick={handleSubmit}>\r\n          Submit\r\n        </Button>\r\n        <Button className=\"shadow-none\" color=\"secondary\" onClick={() => setAddTrackItemModal(false)}>\r\n          Cancel\r\n        </Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default QuoteLineItem;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  ModalFooter,\r\n} from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { useParams } from 'react-router-dom';\r\nimport api from '../../constants/api';\r\nimport message from '../Message';\r\nimport creationdatetime from '../../constants/creationdatetime';\r\nimport AppContext from '../../context/AppContext';\r\n\r\nconst EditLineItemModal = ({ editTrackModal, setEditTrackModal,FetchTrackItemDat,gettrack }) => {\r\n  EditLineItemModal.propTypes = {\r\n    editTrackModal: PropTypes.bool.isRequired,\r\n    setEditTrackModal: PropTypes.func.isRequired,\r\n    FetchTrackItemDat: PropTypes.object,\r\n        gettrack: PropTypes.any,\r\n    \r\n  };\r\n\r\n  const { id } = useParams();\r\n  const { loggedInuser } = useContext(AppContext);\r\n\r\n  const [lineItemData, setLineItemData] = useState(FetchTrackItemDat || {});\r\n\r\n\r\n\r\n  const getQuote = () => {\r\n    api.post('/address/getQuoteById', { contact_id: id }).then((res) => {\r\n      if (res.data.data.length > 0) {\r\n        setLineItemData(res.data.data[0]);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n      setLineItemData(FetchTrackItemDat);\r\n    getQuote();\r\n  }, [FetchTrackItemDat]);\r\n\r\n\r\n  const handleData = (e) => {\r\n    setLineItemData({ ...lineItemData, [e.target.name]: e.target.value });\r\n    //setSelectedFormat(e.target.value);\r\n  };\r\n\r\n\r\n  const UpdateData = () => {\r\n    if (!lineItemData?.address_flat) {\r\n      message('Please fill all required fields.', 'error');\r\n      return;\r\n    }\r\n\r\n    const updatedData = {\r\n      ...lineItemData,\r\n      modification_date: creationdatetime,\r\n      modified_by: loggedInuser?.first_name || 'Unknown',\r\n    };\r\n\r\n    api\r\n      .post('/address/editEquipmentRequestItem', updatedData)\r\n      .then((res) => {\r\n        console.log('Edit Line Item Response:', res.data);\r\n        message('Edit Updated Successfully.', 'success');\r\n        gettrack();\r\n          setTimeout(() => {\r\n          window.location.reload();\r\n        }, 1000);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Update Error:', error);\r\n        message('Unable to edit item. Please try again.', 'error');\r\n      });\r\n  };\r\n     \r\n  return (\r\n    <Modal size=\"lg\" isOpen={editTrackModal} toggle={() => setEditTrackModal(false)}>\r\n      <ModalHeader toggle={() => setEditTrackModal(false)}>Edit Line Item</ModalHeader>\r\n      <ModalBody>\r\n      <Row>\r\n  <Col md=\"4\">\r\n    <FormGroup>\r\n      <Label>Shipper Name</Label>\r\n      <Input\r\n        type=\"text\"\r\n        name=\"shipper_name\"\r\n        value={lineItemData?.shipper_name || ''}\r\n        onChange={handleData}\r\n      />\r\n    </FormGroup>\r\n  </Col>\r\n  <Col md=\"4\">\r\n    <FormGroup>\r\n      <Label>Address 1</Label>\r\n      <Input\r\n        type=\"text\"\r\n        name=\"address_flat\"\r\n        value={lineItemData?.address_flat || ''}\r\n        onChange={handleData}\r\n      />\r\n    </FormGroup>\r\n  </Col>\r\n  <Col md=\"4\">\r\n    <FormGroup>\r\n      <Label>Address 2</Label>\r\n      <Input\r\n        type=\"text\"\r\n        name=\"address_street\"\r\n        value={lineItemData?.address_street || ''}\r\n        onChange={handleData}\r\n      />\r\n    </FormGroup>\r\n  </Col>\r\n  <Col md=\"4\">\r\n    <FormGroup>\r\n      <Label>Address 3</Label>\r\n      <Input\r\n        type=\"text\"\r\n        name=\"address_town\"\r\n        value={lineItemData?.address_town || ''}\r\n        onChange={handleData}\r\n      />\r\n    </FormGroup>\r\n  </Col>\r\n  <Col md=\"4\">\r\n    <FormGroup>\r\n      <Label>State</Label>\r\n      <Input\r\n        type=\"text\"\r\n        name=\"address_state\"\r\n        value={lineItemData?.address_state || ''}\r\n        onChange={handleData}\r\n      />\r\n    </FormGroup>\r\n  </Col>\r\n  <Col md=\"4\">\r\n    <FormGroup>\r\n      <Label>Country</Label>\r\n      <Input\r\n        type=\"text\"\r\n        name=\"address_country\"\r\n        value={lineItemData?.address_country || ''}\r\n        onChange={handleData}\r\n      />\r\n    </FormGroup>\r\n  </Col>\r\n  <Col md=\"4\">\r\n    <FormGroup>\r\n      <Label>Po Code</Label>\r\n      <Input\r\n        type=\"text\"\r\n        name=\"address_po_code\"\r\n        value={lineItemData?.address_po_code || ''}\r\n        onChange={handleData}\r\n      />\r\n    </FormGroup>\r\n  </Col>\r\n\r\n \r\n</Row>\r\n\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button color=\"primary\" className=\"shadow-none\"  onClick={() => {\r\n                      UpdateData();\r\n                      // setQuoteData();\r\n                      //setSelectedQuoteFormat(selectedFormat);\r\n                      setEditTrackModal(false);\r\n\r\n                      //insertquoteLogLine();\r\n                    }}>\r\n          Save & Continue\r\n        </Button>\r\n        <Button color=\"secondary\" className=\"shadow-none\" onClick={() => setEditTrackModal(false)}>\r\n          Cancel\r\n        </Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditLineItemModal;\r\n","import React, { useState } from 'react';\r\nimport { Row, Col, Form, FormGroup, Button } from 'reactstrap';\r\nimport * as Icon from 'react-feather';\r\nimport PropTypes from 'prop-types';\r\nimport ComponentCard from '../ComponentCard';\r\nimport AttachmentModalV2 from '../Tender/AttachmentModalV2';\r\nimport ViewFileComponentV2 from '../ProjectModal/ViewFileComponentV2';\r\n\r\nfunction AttachmentPortalsTab({\r\n  dataForPicture,\r\n  dataForAttachment,\r\n  setAttachmentModal,\r\n  id,\r\n  attachmentModal,\r\n  pictureData,\r\n  attachmentData,\r\n}) {\r\n  AttachmentPortalsTab.propTypes = {\r\n    dataForPicture: PropTypes.any,\r\n    dataForAttachment: PropTypes.func,\r\n    setAttachmentModal: PropTypes.func,\r\n    id: PropTypes.any,\r\n    attachmentModal: PropTypes.bool,\r\n    pictureData: PropTypes.any,\r\n    attachmentData: PropTypes.any,\r\n  };\r\n  const [roomName, setRoomName] = useState('');\r\n  const [fileTypes, setFileTypes] = useState('');\r\n  const [update, setUpdate] = useState(false);\r\n  const [pictureAttachmentModal, setPictureAttachmentModal] = useState(false);\r\n  const [pictureAttachmentModalProperties, setPictureAttachmentModalProperties] = useState({\r\n    altTagData: \"\",\r\n    desc: \"\",\r\n    recordType: \"\",\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Form>\r\n          <FormGroup>\r\n            <Row>\r\n              <Col md=\"6\">\r\n                <ComponentCard title=\"Bill of Lading\">\r\n                  <Row>\r\n                    <Col xs=\"12\" md=\"3\" className=\"mb-3\">\r\n                      <Button\r\n                        className=\"shadow-none\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          setRoomName('Picture');\r\n                          setFileTypes(['JPG', 'PNG', 'GIF']);\r\n                          dataForPicture();\r\n                          setPictureAttachmentModalProperties({\r\n                            altTagData: \"PictureData\",\r\n                            desc: \"Picture Data\",\r\n                            recordType: \"Picture\",\r\n                          })\r\n                          setAttachmentModal(true);\r\n                        }}\r\n                      >\r\n                        <Icon.Image className=\"rounded-circle\" width=\"20\" />\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <AttachmentModalV2\r\n                    moduleId={id}\r\n                    attachmentModal={pictureAttachmentModal}\r\n                    setAttachmentModal={setPictureAttachmentModal}\r\n                    roomName={roomName}\r\n                    fileTypes={fileTypes}\r\n                    altTagData={pictureAttachmentModalProperties.altTagData}\r\n                    desc={pictureAttachmentModalProperties.desc}\r\n                    recordType={pictureAttachmentModalProperties.recordType}\r\n                    mediaType={pictureData.modelType}\r\n                    update={update}\r\n                    setUpdate={setUpdate}\r\n                  />\r\n                  <ViewFileComponentV2\r\n                    moduleId={id}\r\n                    roomName=\"Picture\"\r\n                    recordType=\"Picture\"\r\n                    update={update}\r\n                    setUpdate={setUpdate}\r\n                  />\r\n                </ComponentCard>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <ComponentCard title=\"Carrier Tracking\">\r\n                  <Row>\r\n                    <Col xs=\"12\" md=\"3\" className=\"mb-3\">\r\n                      <Button\r\n                        className=\"shadow-none\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          setRoomName('Work Permit');\r\n                          setFileTypes(['JPG', 'JPEG', 'PNG', 'GIF', 'PDF']);\r\n                          dataForAttachment();\r\n                          setPictureAttachmentModalProperties({\r\n                            altTagData: \"Work Permit\",\r\n                            desc: \"workRelated Data\",\r\n                            recordType: \"RelatedPicture\",\r\n                          })\r\n                          setAttachmentModal(true);\r\n                        }}\r\n                      >\r\n                        <Icon.File className=\"rounded-circle\" width=\"20\" />\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <AttachmentModalV2\r\n                    moduleId={id}\r\n                    attachmentModal={attachmentModal}\r\n                    setAttachmentModal={setAttachmentModal}\r\n                    roomName={roomName}\r\n                    fileTypes={fileTypes}\r\n                    altTagData=\"Work Permit\"\r\n                    desc=\"workRelated Data\"\r\n                    recordType=\"RelatedPicture\"\r\n                    mediaType={attachmentData.modelType}\r\n                    update={update}\r\n                    setUpdate={setUpdate}\r\n                  />\r\n                  <ViewFileComponentV2\r\n                    moduleId={id}\r\n                    roomName=\"Work Permit\"\r\n                    recordType=\"RelatedPicture\"\r\n                    update={update}\r\n                    setUpdate={setUpdate}\r\n                  />\r\n                </ComponentCard>\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n        </Form>\r\n      </Row>\r\n      <Row>\r\n        {/* Picture and Attachments Form */}\r\n        <Form>\r\n          <FormGroup>\r\n            <Row>\r\n              <Col md=\"6\">\r\n                <ComponentCard title=\"Port Documents\">\r\n                  <Row>\r\n                    <Col xs=\"12\" md=\"3\" className=\"mb-3\">\r\n                      <Button\r\n                        className=\"shadow-none\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          setRoomName('WSQ');\r\n                          setFileTypes(['JPG', 'JPEG', 'PNG', 'GIF', 'PDF']);\r\n                          dataForAttachment();\r\n                          setPictureAttachmentModalProperties({\r\n                            altTagData: \"WSQ\",\r\n                            desc: \"WSQRelated Data\",\r\n                            recordType: \"RelatedPicture\",\r\n                          })\r\n                          setAttachmentModal(true);\r\n                        }}\r\n                      >\r\n                        <Icon.File className=\"rounded-circle\" width=\"20\" />\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <AttachmentModalV2\r\n                    moduleId={id}\r\n                    attachmentModal={attachmentModal}\r\n                    setAttachmentModal={setAttachmentModal}\r\n                    roomName={roomName}\r\n                    fileTypes={fileTypes}\r\n                    altTagData=\"WSQ\"\r\n                    desc=\"WSQRelated Data\"\r\n                    recordType=\"RelatedPicture\"\r\n                    mediaType={attachmentData.modelType}\r\n                    update={update}\r\n                    setUpdate={setUpdate}\r\n                  />\r\n                  <ViewFileComponentV2\r\n                    moduleId={id}\r\n                    roomName=\"WSQ\"\r\n                    recordType=\"RelatedPicture\"\r\n                    update={update}\r\n                    setUpdate={setUpdate}\r\n                  />\r\n                </ComponentCard>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <ComponentCard title=\"Photos\">\r\n                  <Row>\r\n                    <Col xs=\"12\" md=\"3\" className=\"mb-3\">\r\n                      <Button\r\n                        className=\"shadow-none\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          setRoomName('Digital Sign');\r\n                          setFileTypes(['JPG', 'JPEG', 'PNG', 'GIF', 'PDF']);\r\n                          dataForAttachment();\r\n                          setPictureAttachmentModalProperties({\r\n                            altTagData: \"Digital Sign\",\r\n                            desc: \"DigitalSign Related Data\",\r\n                            recordType: \"RelatedPicture\",\r\n                          })\r\n                          setAttachmentModal(true);\r\n                        }}\r\n                      >\r\n                        <Icon.File className=\"rounded-circle\" width=\"20\" />\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <AttachmentModalV2\r\n                    moduleId={id}\r\n                    attachmentModal={attachmentModal}\r\n                    setAttachmentModal={setAttachmentModal}\r\n                    roomName={roomName}\r\n                    fileTypes={fileTypes}\r\n                    altTagData=\"Digital Sign\"\r\n                    desc=\"DigitalSign Related Data\"\r\n                    recordType=\"RelatedPicture\"\r\n                    mediaType={attachmentData.modelType}\r\n                    update={update}\r\n                    setUpdate={setUpdate}\r\n                  />\r\n                  <ViewFileComponentV2\r\n                    moduleId={id}\r\n                    roomName=\"Digital Sign\"\r\n                    recordType=\"RelatedPicture\"\r\n                    update={update}\r\n                    setUpdate={setUpdate}\r\n                  />\r\n                </ComponentCard>\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n        </Form>\r\n      </Row>\r\n\r\n      <Row>\r\n        {/* Picture and Attachments Form */}\r\n        <Form>\r\n          <FormGroup>\r\n            <Row>\r\n              <Col md=\"6\">\r\n                <ComponentCard title=\"COO\">\r\n                  <Row>\r\n                    <Col xs=\"12\" md=\"3\" className=\"mb-3\">\r\n                      <Button\r\n                        className=\"shadow-none\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          setRoomName('CSO');\r\n                          setFileTypes(['JPG', 'JPEG', 'PNG', 'GIF', 'PDF']);\r\n                          dataForAttachment();\r\n                          setPictureAttachmentModalProperties({\r\n                            altTagData: \"CSO\",\r\n                            desc: \"CSO Related Data\",\r\n                            recordType: \"RelatedPicture\",\r\n                          })\r\n                          setAttachmentModal(true);\r\n                        }}\r\n                      >\r\n                        <Icon.File className=\"rounded-circle\" width=\"20\" />\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <AttachmentModalV2\r\n                    moduleId={id}\r\n                    attachmentModal={attachmentModal}\r\n                    setAttachmentModal={setAttachmentModal}\r\n                    roomName={roomName}\r\n                    fileTypes={fileTypes}\r\n                    altTagData=\"CSO\"\r\n                    desc=\"CSO Related Data\"\r\n                    recordType=\"RelatedPicture\"\r\n                    mediaType={attachmentData.modelType}\r\n                    update={update}\r\n                    setUpdate={setUpdate}\r\n                  />\r\n                  <ViewFileComponentV2\r\n                    moduleId={id}\r\n                    roomName=\"CSO\"\r\n                    recordType=\"RelatedPicture\"\r\n                    update={update}\r\n                    setUpdate={setUpdate}\r\n                  />\r\n                </ComponentCard>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <ComponentCard title=\"Other Files\">\r\n                  <Row>\r\n                    <Col xs=\"12\" md=\"3\" className=\"mb-3\">\r\n                      <Button\r\n                        className=\"shadow-none\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          setRoomName('Other Files');\r\n                          setFileTypes(['JPG', 'JPEG', 'PNG', 'GIF', 'PDF']);\r\n                          dataForAttachment();\r\n                          setPictureAttachmentModalProperties({\r\n                            altTagData: \"Other Files\",\r\n                            desc: \"Other Files Related Data\",\r\n                            recordType: \"RelatedPicture\",\r\n                          })\r\n                          setAttachmentModal(true);\r\n                        }}\r\n                      >\r\n                        <Icon.File className=\"rounded-circle\" width=\"20\" />\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <AttachmentModalV2\r\n                    moduleId={id}\r\n                    attachmentModal={attachmentModal}\r\n                    setAttachmentModal={setAttachmentModal}\r\n                    roomName={roomName}\r\n                    fileTypes={fileTypes}\r\n                    altTagData=\"Other Files\"\r\n                    desc=\"Other Files Related Data\"\r\n                    recordType=\"RelatedPicture\"\r\n                    mediaType={attachmentData.modelType}\r\n                    update={update}\r\n                    setUpdate={setUpdate}\r\n                  />\r\n                  <ViewFileComponentV2\r\n                    moduleId={id}\r\n                    roomName=\"Other Files\"\r\n                    recordType=\"RelatedPicture\"\r\n                    update={update}\r\n                    setUpdate={setUpdate}\r\n                  />\r\n                </ComponentCard>\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n        </Form>\r\n      </Row>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AttachmentPortalsTab;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Form, FormGroup, Button, Label, Input,TabContent, TabPane,Table } from 'reactstrap';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport '../form-editor/editor.scss';\r\nimport * as Icon from 'react-feather';\r\nimport Swal from 'sweetalert2';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport ComponentCardV2 from '../../components/ComponentCardV2';\r\nimport message from '../../components/Message';\r\nimport api from '../../constants/api';\r\nimport Tab from '../../components/ProjectTabs/Tab';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport creationdatetime from '../../constants/creationdatetime';\r\nimport EnquiriesLinkedTable from '../../components/SupplierModal/EnquiriesLinked';\r\nimport QuoteTrackItem from '../../components/ClientTable/QuoteTrackItem';\r\nimport EditTrackItemModal from '../../components/ClientTable/EditTrckitemModal';\r\n\r\nimport AttachmentPortalsTab from '../../components/EmployeeTable/AttachmentPortalsTab';\r\n\r\nconst ContentUpdate = () => {\r\n  // All state variables\r\n  const [contentDetails, setContentDetails] = useState();\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  // Navigation and Parameter Constants\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [attachmentModal, setAttachmentModal] = useState(false);\r\n  const [attachmentData, setDataForAttachment] = useState({\r\n    modelType: '',\r\n  });\r\n  const [pictureData, setDataForPicture] = useState({\r\n    modelType: '',\r\n  });\r\n  const tabs = [\r\n    { id: '1', name: 'Shipping' },\r\n    { id: '2', name: 'Enquiries Linked' },\r\n    { id: '4', name: 'Attachments' }\r\n  ];\r\n  const toggle = (tab) => {\r\n    setActiveTab(tab);\r\n  };\r\n  //Setting data in contentDetails\r\n  const handleInputs = (e) => {\r\n    setContentDetails({ ...contentDetails, [e.target.name]: e.target.value });\r\n  };\r\n  //setting data in Description Modal contentDetails\r\n\r\n  const dataForAttachment = () => {\r\n    setDataForAttachment({\r\n      modelType: 'attachment',\r\n    });\r\n  };\r\n\r\n  //Pictures\r\n  const dataForPicture = () => {\r\n    setDataForPicture({\r\n      modelType: 'picture',\r\n    });\r\n  };\r\n  // Get content data By content id\r\n  const getContentById = () => {\r\n    api\r\n      .post('/contact/getContactsById', { contact_id: id })\r\n      .then((res) => {\r\n        setContentDetails(res.data.data[0]);\r\n      })\r\n      .catch(() => {\r\n        message('Content Data Not Found', 'info');\r\n      });\r\n  };\r\n  //Edit Content\r\n  const editContentData = () => {\r\n    contentDetails.modification_date = creationdatetime;\r\n    console.log(contentDetails);\r\n    if (\r\n      contentDetails.content_title !== '' &&\r\n      contentDetails.sub_category_id !== '' &&\r\n      contentDetails.published !== ''\r\n    ) {\r\n      api\r\n        .post('/contact/editContact', contentDetails)\r\n        .then(() => {\r\n          message('Record edited successfully', 'success');\r\n        })\r\n        .catch(() => {\r\n          message('Unable to edit record.', 'error');\r\n        });\r\n    } else {\r\n      message('Please fill all required fields', 'warning');\r\n    }\r\n  };\r\n\r\n  // getting data from Category\r\n \r\n\r\n  useEffect(() => {\r\n    getContentById();\r\n  }, [id]);\r\n  \r\n      const [editTrackModelItem, setEditTrackModelItem] = useState(null);\r\n      const [editTrackModal, setEditTrackModal] = useState(false);\r\n      const [addTrackItemModal, setAddTrackItemModal] = useState(false);\r\n        const [TrackItem, setTrackItem] = useState();\r\n        const [viewTrackModal, setViewTrackModal] = useState(false);\r\n            const [track, settrack] = useState({});\r\n        \r\n\r\n  const addTrackItemsToggle = () => {\r\n    setAddTrackItemModal(!addTrackItemModal);\r\n  };\r\n\r\n  const viewTrackToggle = () => {\r\n    setViewTrackModal(!viewTrackModal);\r\n  };\r\n  console.log(viewTrackToggle);\r\n\r\n  const getTrackItem = () => {\r\n    api.post('/address/getQuoteTrackItemsById', { contact_id: id }).then((res) => {\r\n      setTrackItem(res.data.data);\r\n      //setAddLineItemModal(true);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getContentById();\r\n    getTrackItem();\r\n  }, [id]);\r\n  \r\n\r\n\r\n  const columns2 = [\r\n    {\r\n      name: '#',\r\n    },\r\n    {\r\n      name: 'Shipper Name',\r\n    },\r\n    {\r\n      name: 'Address 1',\r\n    },\r\n    {\r\n      name: 'Address 2',\r\n    },\r\n    {\r\n      name: 'State',\r\n    },\r\n    {\r\n      name: 'Town',\r\n    },\r\n    {\r\n      name: 'Country',\r\n    },\r\n    {\r\n      name: 'Pin Code',\r\n    },\r\n    {\r\n      name: 'Action ',\r\n    },\r\n  ];\r\n   // Get track By Id\r\n   const gettrack = () => {\r\n    api.post('/address/getQuoteById', { contact_id: id }).then((res) => {\r\n      if (res.data.data && res.data.data.length > 0) {\r\n        settrack(res.data.data[0]);\r\n      }\r\n    });\r\n  };\r\n\r\n  const deleteTrackRecord = (trackID) => {\r\n    Swal.fire({\r\n      title: `Are you sure? ${trackID}`,\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        api.post('/address/deleteTrackEditItem', { customer_address_id: trackID }).then(() => {\r\n          Swal.fire('Deleted!', 'Your Line Items has been deleted.', 'success');\r\n          window.location.reload();\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <BreadCrumbs heading={contentDetails && contentDetails.title} />\r\n      <Form>\r\n        <FormGroup>\r\n          <ComponentCardV2>\r\n            <Row>\r\n              <Col>\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    editContentData();\r\n                    setTimeout(() => {\r\n                      navigate('/Customer');\r\n                    }, 1100);\r\n                  }}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    editContentData();\r\n                  }}\r\n                >\r\n                  Apply\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  color=\"dark\"\r\n                  onClick={() => {\r\n                    navigate('/Customer');\r\n                    console.log('back to list');\r\n                  }}\r\n                >\r\n                  Back to List\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </ComponentCardV2>\r\n          {/* Content Details Form */}\r\n          <ComponentCard title=\"Customer details\" creationModificationDate={contentDetails}>\r\n            <ToastContainer></ToastContainer>\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label> Contact Id </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={contentDetails && contentDetails.contact_id}\r\n                    name=\"contact_id\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                <Label>Name</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={contentDetails && contentDetails.first_name}\r\n                    name=\"first_name\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  {/* Category title from Category table */}\r\n                  <Label>Mobile</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={contentDetails && contentDetails.mobile}\r\n                    name=\"mobile\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  {/* Category title from Category table */}\r\n                  <Label>Email</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={contentDetails && contentDetails.email}\r\n                    name=\"email\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  {/* Category title from Category table */}\r\n                  <Label>Password</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={contentDetails && contentDetails.pass_word}\r\n                    name=\"pass_word\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                <Label>Address</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={contentDetails && contentDetails.address1}\r\n                    name=\"address1\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n             \r\n            </Row>\r\n          </ComponentCard>\r\n          </FormGroup>\r\n      </Form>\r\n      <ComponentCard title=\"More Details\">\r\n        <Tab toggle={toggle} tabs={tabs} />\r\n        <TabContent className=\"p-4\" activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n            <Row>\r\n              <Col md=\"6\">\r\n                <Button\r\n                  className=\"shadow-none\"\r\n                  color=\"primary\"\r\n                  to=\"\"\r\n                  onClick={addTrackItemsToggle.bind(null)}\r\n                >\r\n                  Add Shipper Address\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            <Row>\r\n              <div className=\"container\">\r\n                <Table id=\"example\" className=\"display border border-secondary rounded\">\r\n                  <thead>\r\n                    <tr>\r\n                      {columns2.map((cell) => {\r\n                        return <td key={cell.name}>{cell.name}</td>;\r\n                      })}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {TrackItem &&\r\n                      TrackItem.map((e, index) => {\r\n                        return (\r\n                          <tr key={e.customer_address_id}>\r\n                            <td>{index + 1}</td>\r\n                            <td>{e.shipper_name}</td>\r\n                            <td>{e.address_flat}</td>\r\n                            <td>{e.address_street}</td>\r\n                            <td>{e.address_state}</td>\r\n                            <td>{e.address_town}</td>\r\n<td >{e.address_country}</td>\r\n<td>{e.address_po_code}</td>\r\n\r\n                            <td data-label=\"Actions\">\r\n                              <span\r\n                                className=\"addline\"\r\n                                onClick={() => {\r\n                                  setEditTrackModelItem(e);\r\n                                  setEditTrackModal(true);\r\n                                }}\r\n                              >\r\n                                <Icon.Edit2 />\r\n                              </span>\r\n                              <span\r\n                                className=\"addline\"\r\n                                onClick={() => {\r\n                                  deleteTrackRecord(e.customer_address_id);\r\n                                }}\r\n                              >\r\n                                <Icon.Trash2 />\r\n                              </span>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            </Row>\r\n            {/* End View Line Item Modal */}\r\n            <EditTrackItemModal\r\n              editTrackModal={editTrackModal}\r\n              setEditTrackModal={setEditTrackModal}\r\n              FetchTrackItemData={editTrackModelItem}\r\n              getTrackItem={getTrackItem}\r\n              setViewTrackModal={setViewTrackModal}\r\n              quoteTrack={id}\r\n              gettrack={gettrack}\r\n              track={track}\r\n            ></EditTrackItemModal>\r\n            {addTrackItemModal && (\r\n              <QuoteTrackItem\r\n                //projectInfo={tenderId}\r\n                addTrackItemModal={addTrackItemModal}\r\n                setAddTrackItemModal={setAddTrackItemModal}\r\n                quoteTrack={id}\r\n              ></QuoteTrackItem>\r\n            )}\r\n          </TabPane>\r\n          <TabPane tabId=\"2\">\r\n            <Row>\r\n              <EnquiriesLinkedTable\r\n                  id={id}\r\n\r\n              />\r\n            </Row>\r\n          </TabPane>\r\n\r\n          <TabPane tabId=\"4\">\r\n            {/* Picture and Attachments Form */}\r\n            <Row>\r\n              <AttachmentPortalsTab\r\n                dataForPicture={dataForPicture}\r\n                dataForAttachment={dataForAttachment}\r\n                id={id}\r\n                attachmentModal={attachmentModal}\r\n                setAttachmentModal={setAttachmentModal}\r\n                pictureData={pictureData}\r\n                attachmentData={attachmentData}\r\n              />\r\n            </Row>\r\n          </TabPane>\r\n         \r\n        </TabContent>\r\n      </ComponentCard>\r\n    </>\r\n  );\r\n};\r\nexport default ContentUpdate;\r\n","import moment from \"moment\"\r\n\r\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\r\nexport default creationdatetime \r\n","import { Card, CardBody } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst pStyle = {\r\n  textAlign: 'right',\r\n  marginRight: '10px',\r\n};\r\nconst oStyle={\r\noutline:'none',\r\nborder:'none'\r\n};\r\n\r\nconst ComponentCardV2 = ({ children }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CardBody style={pStyle} >\r\n        <div className=\"btn btn-space text-nowrap shadow-none outline-none\" style={oStyle}>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCardV2.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ComponentCardV2;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Edit2 = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\"\n  }));\n});\nEdit2.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nEdit2.displayName = 'Edit2';\nexport default Edit2;","import React,{useState} from 'react'\r\nimport { FormGroup,Button,Modal,ModalHeader,ModalBody, ModalFooter } from 'reactstrap';\r\nimport PropTypes from 'prop-types'\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport api from '../../constants/api';\r\nimport message from '../Message';\r\n\r\nconst AttachmentModalV2 = ({attachmentModal,setAttachmentModal,moduleId,roomName,fileTypes,altTagData, desc}) => {\r\n\r\n    AttachmentModalV2.propTypes = {\r\n        attachmentModal: PropTypes.bool,\r\n        setAttachmentModal: PropTypes.func,\r\n        moduleId:PropTypes.string,\r\n        roomName:PropTypes.string,\r\n        altTagData:PropTypes.string,\r\n        desc:PropTypes.string,\r\n        fileTypes:PropTypes.any,\r\n      }\r\n      \r\n        const [file, setFile] = useState([]);\r\n        const [ handleValue, setHandleValue ] = useState()\r\n       const[uploaded, setUploaded]=useState(null)\r\n\r\n        const handleChange = (fiels) => {\r\n          \r\n            const arrayOfObj = Object.entries(fiels).map((e) => ( e[1]  ));\r\n\r\n            setFile(fiels);\r\n            setHandleValue(arrayOfObj);\r\n            console.log(fiels)\r\n        };\r\n\r\n        const uploadFile = () =>{\r\n            \r\n            if(file){\r\n\r\n               // getFiles();\r\n            \r\n          \r\n                const data = new FormData() \r\n                const arrayOfObj = Object.entries(file).map((e) => (  e[1] ));\r\n\r\n                arrayOfObj.forEach((ele) => {\r\n                    data.append(`files`, ele);\r\n                  });\r\n                //data.append('file', file)\r\n                data.append('record_id', moduleId)\r\n                data.append('room_name', roomName)\r\n                data.append('alt_tag_data', altTagData)\r\n                data.append('description', desc)\r\n\r\n                api.post('/file/uploadFiles',data,{onUploadProgress:(filedata)=>{\r\n                    console.log( Math.round((filedata.loaded/filedata.total)*100))\r\n                    setUploaded( Math.round((filedata.loaded/filedata.total)*100))\r\n                   \r\n                }}).then(()=>{\r\n     \r\n                    // setAttachmentModal(false)\r\n                    message('Files Uploaded Successfully','success')\r\n                    \r\n                    setTimeout(() => {\r\n                        window.location.reload()\r\n                    }, 400);\r\n                }).catch(()=>{\r\n                    setAttachmentModal(false)\r\n                    message('Unable to upload File','error')\r\n                    // setTimeout(() => {\r\n                    //     window.location.reload()\r\n                    // }, 400);\r\n                })\r\n            }else{\r\n                message('No files selected','info')\r\n            }\r\n        }\r\n      \r\n    \r\n  return (\r\n\r\n    \r\n    <div>\r\n        \r\n        <Modal isOpen={attachmentModal} >\r\n            <ModalHeader>Upload Media</ModalHeader>\r\n            <ModalBody>\r\n                <FormGroup>\r\n                  \r\n                <FileUploader\r\n                        multiple\r\n                        handleChange={handleChange}\r\n                        name=\"file\"\r\n                        types={fileTypes}\r\n                    />\r\n                    \r\n\r\n                    {handleValue ? (\r\n                        handleValue.map((e) => (\r\n                        <div>\r\n                            <span> Name: {e.name} </span>\r\n                        </div>\r\n                        ))\r\n                    ) : (\r\n                        <span>No file selected</span>\r\n                    )}\r\n\r\n                </FormGroup>\r\n            { uploaded &&  <div className='progress mt-2'>\r\n                    <div className=\"progress-bar h-4\" role='progressbar'\r\n                    aria-valuenow={uploaded}\r\n                    aria-valuemin='0'\r\n                    aria-valuemax='100'\r\n                    style={{width:`${uploaded}%`}}>\r\n                      {`${uploaded}% uploaded`}\r\n                    </div>\r\n                </div>}\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"primary\" className='shadow-none' onClick={()=>{\r\n                    uploadFile()\r\n                }}>Upload</Button>\r\n                <Button color=\"secondary\" className='shadow-none' onClick={()=>{ window.location.reload();setAttachmentModal(false) }}>Cancel</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AttachmentModalV2","import React, { useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport PropTypes from 'prop-types';\r\nimport * as Icon from 'react-feather';\r\nimport message from '../Message';\r\nimport api from '../../constants/api';\r\n\r\nfunction ViewFileComponentV2({ moduleId, roomName }) {\r\n  ViewFileComponentV2.propTypes = {\r\n    moduleId: PropTypes.string,\r\n    roomName: PropTypes.string,\r\n  };\r\n\r\n  const tableStyle = {};\r\n\r\n  const [getFile, setGetFile] = useState(null);\r\n\r\n  const getFiles = () => {\r\n    api.post('/file/getListOfFiles', { record_id: moduleId, room_name: roomName }).then((res) => {\r\n      setGetFile(res.data);\r\n    });\r\n  };\r\n\r\n  const deleteFile = (fileId) => {\r\n    Swal.fire({\r\n      title: `Are you sure?`,\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        api\r\n          .post('/file/deleteFile', { media_id: fileId })\r\n          .then((res) => {\r\n            console.log(res);\r\n            Swal.fire('Deleted!', 'Media has been deleted.', 'success');\r\n            //setViewLineModal(false)\r\n\r\n            window.location.reload();\r\n          })\r\n          .catch(() => {\r\n            message('Unable to Delete Media', 'info');\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFiles();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <table style={tableStyle}>\r\n        <thead>\r\n          <tr style={tableStyle}>\r\n            <th style={tableStyle}>\r\n             File Name\r\n            </th>\r\n            <th width=\"5%\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        {getFile ? (\r\n          getFile.map((res) => {\r\n            return (\r\n                <tr key={res.media_id}>\r\n                  <td style={tableStyle}>\r\n                      <a\r\n                        href={`https://smartwaveadmin.unitdtechnologies.com/storage/uploads/${res.name}`}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                      >\r\n                        {res.name}\r\n                      </a>\r\n                  </td>\r\n                  <td style={tableStyle}>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn shadow-none\"\r\n                      onClick={() => {\r\n                        deleteFile(res.media_id);\r\n                      }}\r\n                    >\r\n                      <Icon.Trash2 />{' '}\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n            );\r\n          })\r\n        ) : (\r\n          <tr><td><p>no files uploaded yet</p></td></tr>\r\n        )}\r\n        </tbody>\r\n        \r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ViewFileComponentV2;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar File = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"13 2 13 9 20 9\"\n  }));\n});\nFile.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nFile.displayName = 'File';\nexport default File;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Image = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"rect\", {\n    x: \"3\",\n    y: \"3\",\n    width: \"18\",\n    height: \"18\",\n    rx: \"2\",\n    ry: \"2\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"8.5\",\n    cy: \"8.5\",\n    r: \"1.5\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"21 15 16 10 5 21\"\n  }));\n});\nImage.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nImage.displayName = 'Image';\nexport default Image;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport moment from 'moment';\r\nimport {  Form, Table } from 'reactstrap';\r\nimport ComponentCard from '../ComponentCard';\r\n\r\nexport default function EnquiriesLinkedTable({purchaseOrder}) {\r\n    EnquiriesLinkedTable.propTypes = {\r\n        purchaseOrder: PropTypes.array,\r\n      }\r\n// structure of makesupplier payment tables\r\n      const supplierTableColumn = [\r\n        {\r\n          name: \"Enquiry Type\",\r\n        },\r\n        {\r\n          name: \"Enquiry Code\",\r\n          \r\n        },\r\n        {\r\n          name: \"Enquiry Date\",\r\n          \r\n        },\r\n        {\r\n          name: \" Amount\",\r\n         \r\n        }\r\n        \r\n      ]\r\n\r\n  return (\r\n    <ComponentCard title=' '>\r\n    <Form>\r\n      <div className=\"MainDiv\">\r\n        <div className=\"container\">\r\n\r\n        <Table id=\"example\" className=\"display border border-secondary rounded\">\r\n        <thead title='Quotations Linked '>\r\n            <tr >\r\n                {supplierTableColumn.map(cell=>{\r\n                  return (<td key={cell.name}>{cell.name}</td>)\r\n                })}\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n          {purchaseOrder && purchaseOrder.map(element=>{\r\n              return (<tr key={element.product_enquiry_id}>\r\n                <td >{moment(element.enquiry_type).format('YYYY-MM-DD')}</td>\r\n                <td>{element.enquiry_code}</td>\r\n              <td>{element.enquiry_date}</td>\r\n              <td>{parseFloat(element.enquiry_amount)}</td>\r\n           \r\n              \r\n              </tr>)\r\n          })}\r\n        </tbody>\r\n    </Table> \r\n        </div>\r\n      </div>\r\n    </Form>\r\n  </ComponentCard>\r\n)\r\n}"],"sourceRoot":""}
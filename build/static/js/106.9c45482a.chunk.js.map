{"version":3,"sources":["views/smartconTables/CarrierTracking.js","layouts/breadcrumbs/BreadCrumbs.js","components/LottieComponent.js","components/CommonTable.js"],"names":["Staff","useState","staff","setStaff","loading","setLoading","useEffect","api","get","then","res","data","$","DataTable","pagingType","pageLength","processing","dom","buttons","extend","text","className","catch","title","name","selector","grow","wrap","width","sortable","map","cell","element","index","carrier_name","tracking_number","shipment_date","actual_delivery_date","expected_delivery_date","shipment","carrier_tracking_id","BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","active","LottieComponent","defaultOptions","loop","autoplay","renderer","animationData","rendererSettings","preserveAspectRatio","options","height","CommonTable","props","subtitle","style","justifyContent","xl","sm","Button","id","additionalClasses","striped","responsive","borderless","children"],"mappings":"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","file":"static/js/106.9c45482a.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'datatables.net-dt/js/dataTables.dataTables';\r\nimport 'datatables.net-dt/css/jquery.dataTables.min.css';\r\nimport $ from 'jquery';\r\nimport 'datatables.net-buttons/js/buttons.colVis';\r\nimport 'datatables.net-buttons/js/buttons.flash';\r\nimport 'datatables.net-buttons/js/buttons.html5';\r\nimport 'datatables.net-buttons/js/buttons.print';\r\nimport api from '../../constants/api';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport CommonTable from '../../components/CommonTable';\r\n\r\n\r\nconst Staff = () => {\r\n  // All state variables\r\n  const [staff, setStaff] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  //Api call for getting Staff Data\r\n  const getStaff = () => {\r\n    api\r\n      .get('/tracking/getTrack')\r\n      .then((res) => {\r\n        setStaff(res.data.data);\r\n        $('#example').DataTable({\r\n          pagingType: 'full_numbers',\r\n          pageLength: 20,\r\n          processing: true,\r\n          dom: 'Bfrtip',\r\n          buttons: [\r\n            {\r\n              extend: 'print',\r\n              text: 'Print',\r\n              className: 'shadow-none btn btn-primary',\r\n            },\r\n          ],\r\n        });\r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getStaff();\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      name: '#',\r\n      selector: '',\r\n      grow: 0,\r\n      wrap: true,\r\n      width: '4%',\r\n    },\r\n \r\n    {\r\n      name: 'Name',\r\n      sortable: true,\r\n      grow: 0,\r\n      wrap: true,\r\n    },\r\n    {\r\n      name: 'Tracking Number',\r\n      sortable: true,\r\n      grow: 2,\r\n      wrap: true,\r\n    },\r\n    {\r\n      name: 'Shipment Date',\r\n      sortable: true,\r\n      grow: 0,\r\n    },\r\n    {\r\n      name: 'Actual Delivery Date',\r\n      sortable: true,\r\n      width: 'auto',\r\n      grow: 3,\r\n    },\r\n    {\r\n      name: 'Expected Delivery Date',\r\n      sortable: true,\r\n      grow: 2,\r\n      width: 'auto',\r\n    },\r\n    {\r\n      name: 'Shipment',\r\n      sortable: true,\r\n      grow: 2,\r\n      wrap: true,\r\n    },\r\n  \r\n \r\n  ];\r\n\r\n  return (\r\n    <div className=\"MainDiv\">\r\n      <div className=\" pt-xs-25\">\r\n      <BreadCrumbs />\r\n      <CommonTable\r\n          loading={loading}\r\n          title=\"Track List\"\r\n         \r\n        >\r\n          <thead>\r\n            <tr>\r\n              {columns.map((cell) => {\r\n                return <td key={cell.name}>{cell.name}</td>;\r\n              })}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {staff &&\r\n              staff.map((element, index) => {\r\n                return (\r\n                  <tr key={element.carrier_tracking_id}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{element.carrier_name}</td>\r\n                    <td>{element.tracking_number}</td>\r\n                    <td>{element.shipment_date}</td>\r\n                    <td>{element.actual_delivery_date}</td>\r\n                    <td>{element.expected_delivery_date}</td>\r\n                    <td>{element.shipment}</td>\r\n               \r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </CommonTable>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Staff;\r\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import React from 'react';\r\nimport Lottie from 'react-lottie';\r\nimport animationData from './pencil.json';\r\n/* eslint-disable */\r\nconst LottieComponent = () => {\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    renderer: 'svg',\r\n    animationData: animationData,\r\n    rendererSettings: {\r\n      preserveAspectRatio: 'xMidYMid slice'\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Lottie options={defaultOptions} height={100} width={100} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LottieComponent;\r\n","\r\nimport { Card, CardBody, CardTitle, CardSubtitle, Table, Col, Row } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport LottieComponent from './LottieComponent'\r\n\r\nconst CommonTable = (props) => {\r\n    CommonTable.propTypes = {\r\n        children: PropTypes.node,\r\n        title: PropTypes.any,\r\n        subtitle: PropTypes.any,\r\n        Button:PropTypes.node,\r\n        additionalClasses:PropTypes.string,\r\n        loading:PropTypes.bool\r\n      };\r\n  return (\r\n     <div>\r\n    <Card>\r\n      <CardBody>\r\n        <Row className=\"mb-2 title_border\">\r\n          <Col>\r\n            <CardTitle tag=\"h5\">{props.title}</CardTitle>\r\n            <CardSubtitle className=\"mb-2 text-muted\" tag=\"h6\">\r\n              {props.subtitle}\r\n            </CardSubtitle>\r\n          </Col>\r\n          <Col className='d-flex' style={{justifyContent:'flex-end'}} xl={3} sm={12}>\r\n              {props.Button}\r\n          </Col>\r\n        </Row>\r\n        {props.loading ? <LottieComponent /> : <Table id=\"example\" className={`no-wrap mt-3 align-middle example ${props.additionalClasses}`} striped responsive borderless>\r\n          {props.children}\r\n        </Table>}\r\n        \r\n      </CardBody>\r\n    </Card>\r\n  </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default CommonTable;\r\n"],"sourceRoot":""}
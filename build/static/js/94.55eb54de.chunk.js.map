{"version":3,"sources":["views/detailTable/ProductDetails.js","layouts/breadcrumbs/BreadCrumbs.js","components/Message.js","components/CreationModification.js","components/ComponentCard.js","constants/creationdatetime.js"],"names":["ProductDetails","navigate","useNavigate","useState","title","creation_date","moment","productDetails","setProductDetails","loggedInuser","useContext","AppContext","insertProductData","ProductCode","trim","product_code","creationdatetime","created_by","first_name","api","post","then","res","insertedDataId","data","insertId","message","type","resp","InventoryCode","product_id","inventory_code","catch","inventoryError","console","error","codeError","setTimeout","productError","useEffect","md","className","onChange","e","target","name","value","color","onClick","log","window","confirm","preventDefault","BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","active","msg","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","info","warning","CreationModification","details","modification_date","ComponentCard","children","subtitle","creationModificationDate","format"],"mappings":"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","file":"static/js/94.55eb54de.chunk.js","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport { Row, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport message from '../../components/Message';\r\nimport api from '../../constants/api';\r\nimport creationdatetime from '../../constants/creationdatetime';\r\nimport AppContext from '../../context/AppContext';\r\n\r\nconst ProductDetails = () => {\r\n  //All const variables\r\n  const navigate = useNavigate();\r\n  const [productDetails, setProductDetails] = useState({\r\n    title: '',\r\n    creation_date: moment(),\r\n  });\r\n  //setting data in ProductDetails\r\n  const handleInputs = (e) => {\r\n    setProductDetails({ ...productDetails, [e.target.name]: e.target.value });\r\n  };\r\n  //get staff details\r\n  const { loggedInuser } = useContext(AppContext);\r\n  //Insert Product Data\r\n  const insertProductData = (ProductCode) => {\r\n    if (productDetails.title.trim() !== '') {\r\n      productDetails.product_code = ProductCode;\r\n      productDetails.creation_date = creationdatetime;\r\n      productDetails.created_by = loggedInuser.first_name;\r\n      \r\n      // Insert product\r\n      api.post('/product/insertProduct', productDetails)\r\n        .then((res) => {\r\n          const insertedDataId = res.data.data.insertId;\r\n          message('Product inserted successfully.', 'success');\r\n  \r\n          // Fetch inventory code and insert inventory\r\n\r\n          api\r\n          .post('/commonApi/getCodeValues', { type: 'inventory' })\r\n          .then((resp) => {\r\n              const InventoryCode = resp.data.data;\r\n              message('Fetched Inventory code successfully.', 'success');\r\n              api.post('/inventory/insertinventory', {\r\n                product_id: insertedDataId,\r\n                inventory_code: InventoryCode,\r\n                created_by: loggedInuser.first_name, \r\n                creation_date: creationdatetime, \r\n              })\r\n              .then(() => {\r\n                message('Inventory created successfully.', 'success');\r\n              })\r\n              .catch((inventoryError) => {\r\n                console.error('Error creating inventory:', inventoryError);\r\n                message('Unable to create inventory.', 'error');\r\n              });\r\n  \r\n            })\r\n            .catch((codeError) => {\r\n              console.error('Error fetching Inventory code:', codeError);\r\n              message('Unable to fetch Inventory code.', 'error');\r\n            });\r\n  \r\n          setTimeout(() => {\r\n            navigate(`/ProductEdit/${insertedDataId}`);\r\n          }, 300);\r\n        })\r\n        .catch((productError) => {\r\n          console.error('Error inserting product:', productError);\r\n          message('Unable to insert product.', 'error');\r\n        });\r\n    } else {\r\n      message('Please fill all required fields.', 'warning');\r\n    }\r\n  };\r\n  \r\n\r\n  //Auto generation code\r\n  const generateCode = () => {\r\n    api\r\n      .post('/commonApi/getCodeValue', { type: 'product' })\r\n      .then((res) => {\r\n        const ProductCode = res.data.data;\r\n       console.log('ProductCode',ProductCode)\r\n          insertProductData(ProductCode);\r\n      })\r\n      .catch(() => {\r\n        insertProductData('');\r\n      });\r\n  };\r\n\r\n  //useeffect\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <div>\r\n      <BreadCrumbs />\r\n      <ToastContainer></ToastContainer>\r\n      <Row>\r\n        <Col md=\"6\">\r\n          <ComponentCard title=\"Key Details\">\r\n            <Form>\r\n              <FormGroup>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <Label>\r\n                      Product Name <span className=\"required\"> *</span>{' '}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={handleInputs}\r\n                      value={ProductDetails && ProductDetails.title}\r\n                      name=\"title\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Row>\r\n                  <div className=\"pt-3 mt-3 d-flex align-items-center gap-2\">\r\n                    <Button\r\n                      className=\"shadow-none\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        generateCode();\r\n                      }}\r\n                    >\r\n                      Save & Continue\r\n                    </Button>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-dark shadow-none\"\r\n                      onClick={(e) => {\r\n                        if (window.confirm('Are you sure you want to cancel? ')) {\r\n                          navigate('/Product');\r\n                        } else {\r\n                          e.preventDefault();\r\n                        }\r\n                      }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </div>\r\n                </Row>\r\n              </FormGroup>\r\n            </Form>\r\n          </ComponentCard>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default ProductDetails;\r\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n                <small>Modification Date: {details && details.modification_date}</small>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n                <small>Creation Date: {details && details.creation_date}</small>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n  );\r\n}\r\n","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n","import moment from \"moment\"\r\n\r\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\r\nexport default creationdatetime \r\n"],"sourceRoot":""}
{"version":3,"sources":["layouts/breadcrumbs/BreadCrumbs.js","components/Message.js","views/detailTable/EnquiryDetails.js","components/CreationModification.js","components/ComponentCard.js","constants/creationdatetime.js"],"names":["BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","OpportunityDetails","useState","company","setCompany","formSubmitted","setFormSubmitted","id","useParams","loggedInuser","useContext","AppContext","navigate","useNavigate","title","company_name","tenderForms","setTenderForms","handleInputsTenderForms","e","console","log","target","name","value","insertTender","code","contact_id","enquiry_code","creation_date","creationdatetime","created_by","first_name","api","post","then","res","insertedDataId","data","insertId","setTimeout","catch","useEffect","get","md","xs","trim","onChange","map","ele","color","onClick","window","confirm","CreationModification","details","modification_date","ComponentCard","children","subtitle","creationModificationDate","moment","format"],"mappings":"iHAAA,mCAwBeA,IApBK,SAACC,GACnB,IAAMC,EAAWC,cACXC,EAAWF,EAASG,SAASC,MAAM,KAAK,GACxCC,EAAYL,EAASG,SAASC,MAAM,KAAK,GAE/C,OACE,qCAEE,6BAAKL,EAAKO,UACV,eAAC,IAAD,WACE,cAAC,IAAD,CAAgBC,GAAG,IAAIC,IAAKC,IAAMC,UAAU,uBAA5C,kBAGCR,EAAW,cAAC,IAAD,CAAgBS,QAAM,EAAtB,SAAwBT,IAA6B,GAChEG,EAAY,cAAC,IAAD,CAAgBM,QAAM,EAAtB,SAAwBN,IAA8B,W,iCClB3E,oBAqDeO,IAlDC,SAACC,EAAIC,GACjB,MAAY,YAATA,EACOC,IAAMC,QAAQH,EAAK,CACrBI,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,YAED,UAATX,EACMC,IAAMW,MAAMb,EAAK,CACnBI,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,YAED,SAATX,EACKC,IAAMY,KAAKd,EAAK,CAClBI,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,YAEK,YAATX,EACMC,IAAMa,QAAQf,EAAK,CACrBI,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,YAGRV,YAAMF,K,6JCkKVgB,UAxMY,WACzB,MAA8BC,qBAA9B,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,EAA0CF,oBAAS,GAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACQC,EAAOC,cAAPD,GACAE,EAAiBC,qBAAWC,KAA5BF,aACFG,EAAWC,cAajB,EAAsCX,mBAAS,CAC7CY,MAAO,GACPC,aAAc,KAFhB,mBAAOC,EAAP,KAAoBC,EAApB,KAMMC,EAA0B,SAACC,GAE/BC,QAAQC,IAAI,0BAAZ,2BAA2CL,GAA3C,kBAAyDG,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,SAElFP,EAAe,2BAAKD,GAAN,kBAAoBG,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,UAyBvDC,EAAe,SAACC,GACW,KAA3BV,EAAYW,YAA2C,KAAtBX,EAAYF,OAC/CE,EAAYY,aAAeF,EAC3BV,EAAYa,cAAgBC,IAC5Bd,EAAYe,WAAatB,EAAauB,WACtCC,IACGC,KAAK,yBAA0BlB,GAC/BmB,MAAK,SAACC,GACL,IAAMC,EAAiBD,EAAIE,KAAKA,KAAKC,SAErCvD,YAAQ,iCAAkC,WAC1CwD,YAAW,WACT5B,EAAS,gBAAD,OAAiByB,EAAjB,aACP,QAEJI,OAAM,WACLzD,YAAQ,4BAA6B,cAGzCsB,GAAiB,GACjBtB,YAAQ,kCAAmC,aAqB/C,OALA0D,qBAAU,WAhFRT,IAAIU,IAAI,uBAAuBR,MAAK,SAACC,GACnChC,EAAWgC,EAAIE,KAAKA,WAkFrB,CAAC/B,IAGF,gCACE,cAAC,IAAD,IACA,eAAC,KAAD,WACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAKqC,GAAG,IAAIC,GAAG,KAAf,SACE,cAAC,UAAD,CAAe/B,MAAM,kBAArB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,KAAD,UACE,eAAC,IAAD,CAAK8B,GAAG,IAAR,UACE,eAAC,IAAD,WACG,IADH,SAEQ,sBAAM9D,UAAU,WAAhB,gBAAqC,OAE7C,cAAC,IAAD,CACEI,KAAK,OACLqC,KAAK,QACLzC,UAAS,uBAAkBuB,GAAiBW,GAA4C,KAA7BA,EAAYF,MAAMgC,OAAgB,YAAc,IAE3GtB,MAAOR,GAAeA,EAAYF,MAClCiC,SAAU7B,IAEXb,GAAiBW,GAA4C,KAA7BA,EAAYF,MAAMgC,QACjD,qBAAKhE,UAAU,gBAAf,2CAKR,cAAC,IAAD,UACE,cAAC,KAAD,UACE,eAAC,IAAD,CAAK8D,GAAG,IAAR,UACE,eAAC,IAAD,2BACe,sBAAM9D,UAAU,WAAhB,gBAAqC,OAEpD,eAAC,IAAD,CACEI,KAAK,SACLqC,KAAK,aACLzC,UAAS,uBAAkBuB,GAAiBW,SAA2CpB,IAA3BoB,EAAYW,YAA8D,KAAlCX,EAAYW,WAAWmB,QACrH,YACA,IAINC,SAAU,SAAC5B,GACTD,EAAwBC,IAV5B,UAcE,wBAAQK,MAAM,GAAd,2BACCrB,GACCA,EAAQ6C,KAAI,SAACC,GACX,OACE,wBAA6BzB,MAAOyB,EAAItB,WAAxC,SACGsB,EAAIjB,YADMiB,EAAItB,kBAMxBtB,GAAiBW,SAA2CpB,IAA3BoB,EAAYW,YAA8D,KAAlCX,EAAYW,WAAWmB,SAC/F,qBAAKhE,UAAU,gBAAf,mDAQR,cAAC,KAAD,UACE,sBAAKA,UAAU,4CAAf,UACE,cAAC,IAAD,CACEI,KAAK,SACLgE,MAAM,UACNpE,UAAU,uBACVqE,QAAS,WAzFzBlB,IACGC,KAAK,2BAA4B,CAAEhD,KAAM,YACzCiD,MAAK,SAACC,GACLX,EAAaW,EAAIE,KAAKA,SAEvBG,OAAM,WACLhB,EAAa,QA+EH,6BAUA,cAAC,IAAD,CACE3C,UAAU,cACVoE,MAAM,OACNC,QAAS,WAELC,OAAOC,QACL,2EAGFzC,GAAU,IAThB,wC,kECtLH,SAAS0C,EAAT,GAA0D,IAAD,IAAzBC,eAAyB,MAAf,KAAe,EAATzC,EAAS,EAATA,MAK7D,OACE,mCACE,cAAC,IAAD,CAAWlC,IAAI,KAAKE,UAAU,+BAA9B,SACE,eAAC,KAAD,WACE,cAAC,IAAD,UAAMgC,IACLyC,GACC,eAAC,IAAD,WACE,cAAC,KAAD,UACE,wDAA2BA,GAAWA,EAAQC,uBAEhD,cAAC,KAAD,CAAK1E,UAAU,SAAf,SACE,oDAAuByE,GAAWA,EAAQ1B,6BCO3C4B,UAvBO,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,SAAU5C,EAA+C,EAA/CA,MAAO6C,EAAwC,EAAxCA,SAASC,EAA+B,EAA/BA,yBACjD,OACE,eAAC,IAAD,CAAM9E,UAAU,cAAhB,UACE,cAACwE,EAAD,CAAsBC,QAASK,EAA0B9C,MAAOA,IAKhE,eAAC,IAAD,CAAUhC,UAAU,MAApB,UACE,cAAC,IAAD,CAAcA,UAAU,kBAAxB,SAA2C6E,GAAY,KACvD,8BAAMD,Y,iCCdd,aAEM5B,EAFN,MAEyB+B,KAASC,OAAO,wBAC1BhC","file":"static/js/93.2684c28f.chunk.js","sourcesContent":["import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import React, { useState, useEffect,useContext } from 'react';\r\nimport { Row, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport api from '../../constants/api';\r\nimport message from '../../components/Message';\r\nimport creationdatetime from '../../constants/creationdatetime';\r\nimport AppContext from '../../context/AppContext';\r\n\r\nconst OpportunityDetails = () => {\r\n  const [company, setCompany] = useState();\r\n\r\n  const [formSubmitted, setFormSubmitted] = useState(false);\r\n  const { id } = useParams();\r\n  const { loggedInuser } = useContext(AppContext);\r\n  const navigate = useNavigate();\r\n \r\n  //Api call for getting company dropdown\r\n  const getCompany = () => {\r\n    api.get('/company/getContact').then((res) => {\r\n      setCompany(res.data.data);\r\n    });\r\n  };\r\n\r\n\r\n\r\n\r\n  //Logic for adding tender in db\r\n  const [tenderForms, setTenderForms] = useState({\r\n    title: '',\r\n    company_name: '',\r\n   \r\n  });\r\n\r\n  const handleInputsTenderForms = (e) => {\r\n\r\n    console.log(\"handleInputsTenderForms\",{ ...tenderForms, [e.target.name]: e.target.value })\r\n\r\n    setTenderForms({ ...tenderForms, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // //Api for getting all countries\r\n  // const getAllCountries = () => {\r\n  //   api\r\n  //     .get('/clients/getCountry')\r\n  //     .then((res) => {\r\n  //       setallCountries(res.data.data);\r\n  //     })\r\n  //     .catch(() => {\r\n  //       message('Country Data Not Found', 'info');\r\n  //     });\r\n  // };\r\n  //const[tenderDetails,setTenderDetails]=useState();\r\n \r\n\r\n  // // Get contact \r\n  // const getContact = (companyId) => {\r\n  //   // setSelectedCompany(companyId);\r\n  //   api.post('/company/getContactByCompanyId', { contact_id: companyId }).then((res) => {\r\n  //     setContact(res.data.data[0]?.contact_id);\r\n  //   });\r\n  // };\r\n\r\n  const insertTender = (code) => {\r\n    if (tenderForms.contact_id !== '' && tenderForms.title !== '') {\r\n      tenderForms.enquiry_code = code;\r\n      tenderForms.creation_date = creationdatetime\r\n      tenderForms.created_by = loggedInuser.first_name;\r\n      api\r\n        .post('/enquiry/insertEnquiry', tenderForms)\r\n        .then((res) => {\r\n          const insertedDataId = res.data.data.insertId;\r\n\r\n          message('Enquiry inserted successfully.', 'success');\r\n          setTimeout(() => {\r\n            navigate(`/EnquiryEdit/${insertedDataId}?tab=1`);\r\n          }, 300);\r\n        })\r\n        .catch(() => {\r\n          message('Network connection error.', 'error');\r\n        });\r\n    } else {\r\n      setFormSubmitted(true);\r\n      message('Please fill all required fields', 'warning');\r\n    }\r\n  };\r\n\r\n  //QUTO GENERATED CODE\r\n  const generateCode = () => {\r\n    api\r\n      .post('/commonApi/getCodeValues', { type: 'enquiry' })\r\n      .then((res) => {\r\n        insertTender(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        insertTender('');\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCompany();\r\n    // getAllCountries();\r\n  }, [id]);\r\n\r\n  return (\r\n    <div>\r\n      <BreadCrumbs />\r\n      <Row>\r\n        <ToastContainer></ToastContainer>\r\n        <Col md=\"6\" xs=\"12\">\r\n          <ComponentCard title=\"New Opportunity\">\r\n            <Form>\r\n              <FormGroup>\r\n                <Row>\r\n                  <Col md=\"9\">\r\n                    <Label>\r\n                      {' '}\r\n                      Title <span className=\"required\"> *</span>{' '}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"title\"\r\n                      className={`form-control ${formSubmitted && tenderForms && tenderForms.title.trim() === '' ? 'highlight' : ''\r\n                        }`}\r\n                      value={tenderForms && tenderForms.title}\r\n                      onChange={handleInputsTenderForms}\r\n                    />\r\n                    {formSubmitted && tenderForms && tenderForms.title.trim() === '' && (\r\n                      <div className=\"error-message\">Please enter the title</div>\r\n                    )}\r\n                  </Col>\r\n                </Row>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Row>\r\n                  <Col md=\"9\">\r\n                    <Label>\r\n                      Company Name <span className=\"required\"> *</span>{' '}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"contact_id\"\r\n                      className={`form-control ${formSubmitted && tenderForms && (tenderForms.contact_id === undefined || tenderForms.contact_id.trim() === '')\r\n                          ? 'highlight'\r\n                          : ''\r\n                        }`}\r\n                      //value={tenderForms && tenderForms.contact_id}\r\n                      // onChange={handleInputsTenderForms}\r\n                      onChange={(e) => {\r\n                        handleInputsTenderForms(e)\r\n                      }}\r\n\r\n                    >\r\n                      <option value=''>Please Select</option>\r\n                      {company &&\r\n                        company.map((ele) => {\r\n                          return (\r\n                            <option key={ele.contact_id} value={ele.contact_id}>\r\n                              {ele.first_name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                    </Input>\r\n                    {formSubmitted && tenderForms && (tenderForms.contact_id === undefined || tenderForms.contact_id.trim() === '') && (\r\n                      <div className=\"error-message\">Please select the company name</div>\r\n                    )}\r\n                  </Col>\r\n                 \r\n                </Row>\r\n              </FormGroup>\r\n             \r\n              \r\n              <Row>\r\n                <div className=\"pt-3 mt-3 d-flex align-items-center gap-2\">\r\n                  <Button\r\n                    type=\"button\"\r\n                    color=\"primary\"\r\n                    className=\"btn mr-2 shadow-none\"\r\n                    onClick={() => {\r\n                      generateCode();\r\n                    }}\r\n                  >\r\n                    Save & Continue\r\n                  </Button>\r\n                  <Button\r\n                    className=\"shadow-none\"\r\n                    color=\"dark\"\r\n                    onClick={() => {\r\n                      if (\r\n                        window.confirm(\r\n                          'Are you sure you want to cancel  \\n  \\n You will lose any changes made',\r\n                        )\r\n                      ) {\r\n                        navigate(-1);\r\n                      }\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </div>\r\n              </Row>\r\n            </Form>\r\n          </ComponentCard>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpportunityDetails;\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n                <small>Modification Date: {details && details.modification_date}</small>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n                <small>Creation Date: {details && details.creation_date}</small>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n  );\r\n}\r\n","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n","import moment from \"moment\"\r\n\r\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\r\nexport default creationdatetime \r\n"],"sourceRoot":""}